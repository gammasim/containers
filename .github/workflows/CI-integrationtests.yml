---
name: CI-integrationtests
# Execute integration tests for docker container
# with gammasim-tools

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: ["main"]
  release:
    types: [published]

jobs:

  integrationtests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        #        python-version: [3.8, 3.9, 3.10.4]
        python-version: [3.9]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: corsikasimtelpackage
        run: |
          wget --no-verbose https://syncandshare.desy.de/index.php/s/${{ secrets.CLOUD_SIMTEL }}/download
          mv download ./dev/corsika7.7_simtelarray.tar.gz

      - name: build
        run: |
          cd ./dev
          docker build -t gammasim-tools-dev .

      - name: unittest
        run: |
          cd dev/external
          git clone https://github.com/gammasim/gammasim-tools.git
          cd gammasim-tools
          touch set_DB_environ.sh
          echo "export DB_API_USER=${{ secrets.DB_API_USER }}" >> set_DB_environ.sh
          echo "export DB_API_PW=${{ secrets.DB_API_PW }}" >> set_DB_environ.sh
          echo "export DB_API_PORT=${{ secrets.DB_API_PORT }}" >> set_DB_environ.sh
          echo "export DB_SERVER=${{ secrets.DB_SERVER }}" >> set_DB_environ.sh
          cd ../..
          # run unit tests and require that all tests are pass
          docker run -t --rm -v "$(pwd)/external:/workdir/external" gammasim-tools-dev bash -c "$(cat ./entrypoint.sh) && pytest -x tests/unit_tests/" | tee -a unit_tests.log
          grep FAILED unit_tests.log && exit 1
          # run integration tests and require that all tests are pass
          docker run -t --rm -v "$(pwd)/external:/workdir/external" gammasim-tools-dev bash -c "$(cat ./entrypoint.sh) && pytest -x tests/integration_tests/" | tee -a integration_tests.log
          cat integration_tests.log
          grep FAILED integration_tests.log && exit 1
